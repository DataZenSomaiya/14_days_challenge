<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0525.0851                               -->
<workbook original-version='18.1' source-build='2022.1.2 (20221.22.0525.0851)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Latest_Covid-19_India_Status_csv' inline='true' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Latest_Covid-19_India_Status_csv' name='textscan.16vu2qd13do0yb15fi67f0pqrjq6'>
            <connection class='textscan' directory='C:/Users/aaaya/Downloads' filename='Latest_Covid-19_India_Status_csv.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.16vu2qd13do0yb15fi67f0pqrjq6' name='Latest_Covid-19_India_Status_csv.csv' table='[Latest_Covid-19_India_Status_csv#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State/UTs' ordinal='0' />
            <column datatype='integer' name='Total Cases' ordinal='1' />
            <column datatype='integer' name='Active' ordinal='2' />
            <column datatype='integer' name='Discharged' ordinal='3' />
            <column datatype='integer' name='Deaths' ordinal='4' />
            <column datatype='real' name='Active Ratio' ordinal='5' />
            <column datatype='real' name='Discharge Ratio' ordinal='6' />
            <column datatype='real' name='Death Ratio' ordinal='7' />
            <column datatype='integer' name='Population' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.16vu2qd13do0yb15fi67f0pqrjq6' name='Latest_Covid-19_India_Status_csv.csv' table='[Latest_Covid-19_India_Status_csv#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State/UTs' ordinal='0' />
            <column datatype='integer' name='Total Cases' ordinal='1' />
            <column datatype='integer' name='Active' ordinal='2' />
            <column datatype='integer' name='Discharged' ordinal='3' />
            <column datatype='integer' name='Deaths' ordinal='4' />
            <column datatype='real' name='Active Ratio' ordinal='5' />
            <column datatype='real' name='Discharge Ratio' ordinal='6' />
            <column datatype='real' name='Death Ratio' ordinal='7' />
            <column datatype='integer' name='Population' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UTs</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UTs]</local-name>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias>State/UTs</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discharged</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Discharged]</local-name>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias>Discharged</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Ratio]</local-name>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias>Active Ratio</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discharge Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discharge Ratio]</local-name>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias>Discharge Ratio</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Ratio]</local-name>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias>Death Ratio</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Latest_Covid-19_India_Status_csv.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Active Ratio]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
      <column datatype='real' name='[Death Ratio]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='real' name='[Discharge Ratio]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Discharged]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Latest_Covid-19_India_Status_csv.csv' datatype='table' name='[__tableau_internal_object_id__].[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
      <column-instance column='[Active Ratio]' derivation='Sum' name='[sum:Active Ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Death Ratio]' derivation='Sum' name='[sum:Death Ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discharge Ratio]' derivation='Sum' name='[sum:Discharge Ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discharged]' derivation='Sum' name='[sum:Discharged:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#00aa00'>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]&quot;</bucket>
            </map>
            <map to='#00aaff'>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Death Ratio:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Total Cases:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Discharged:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[__tableau_internal_object_id__].[cnt:Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Discharge Ratio:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active Ratio:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Population:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/UTs:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Latest_Covid-19_India_Status_csv.csv' id='Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00'>
            <properties context=''>
              <relation connection='textscan.16vu2qd13do0yb15fi67f0pqrjq6' name='Latest_Covid-19_India_Status_csv.csv' table='[Latest_Covid-19_India_Status_csv#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='State/UTs' ordinal='0' />
                  <column datatype='integer' name='Total Cases' ordinal='1' />
                  <column datatype='integer' name='Active' ordinal='2' />
                  <column datatype='integer' name='Discharged' ordinal='3' />
                  <column datatype='integer' name='Deaths' ordinal='4' />
                  <column datatype='real' name='Active Ratio' ordinal='5' />
                  <column datatype='real' name='Discharge Ratio' ordinal='6' />
                  <column datatype='real' name='Death Ratio' ordinal='7' />
                  <column datatype='integer' name='Population' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Area Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Population:qk]</rows>
        <cols>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</cols>
      </table>
      <simple-id uuid='{9C0C152B-9C34-4B56-8BA7-5FB20C43BC81}' />
    </worksheet>
    <worksheet name='Bar Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='real' name='[Active Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='real' name='[Death Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Discharge Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Discharged]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Latest_Covid-19_India_Status_csv.csv' datatype='integer' name='[__tableau_internal_object_id__].[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Latest_Covid-19_India_Status_csv.csv' datatype='table' name='[__tableau_internal_object_id__].[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active Ratio]' derivation='Sum' name='[sum:Active Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Ratio]' derivation='Sum' name='[sum:Death Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discharge Ratio]' derivation='Sum' name='[sum:Discharge Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discharged]' derivation='Sum' name='[sum:Discharged:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]&quot;</bucket>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[__tableau_internal_object_id__].[cnt:Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00:qk]&quot;</bucket>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Death Ratio:qk]&quot;</bucket>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active Ratio:qk]&quot;</bucket>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Discharge Ratio:qk]&quot;</bucket>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Discharged:qk]&quot;</bucket>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Total Cases:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' direction='DESC' using='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]' />
          <slices>
            <column>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Deaths:qk]' />
              <lod column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[Multiple Values]</rows>
        <cols>([federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk] / [federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{5FD2E172-003F-40E5-89B4-4ED67B36A859}' />
    </worksheet>
    <worksheet name='Box Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Andhra Pradesh&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Gujarat&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Jharkhand&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Karnataka&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Maharashtra&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Tamil Nadu&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Telengana&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]' field-type='quantitative' max='44721' min='-1647' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]</rows>
        <cols>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</cols>
      </table>
      <simple-id uuid='{F65BAF15-6684-4549-B7EA-C465D2AF4221}' />
    </worksheet>
    <worksheet name='Bubble Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Delhi&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Goa&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Gujarat&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Karnataka&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Maharashtra&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Tamil Nadu&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' />
              <size column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Population:qk]' />
              <text column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9F97ECED-2EA1-4D39-8B5A-5102455571EC}' />
    </worksheet>
    <worksheet name='Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='real' name='[Active Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='real' name='[Death Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Discharge Ratio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Discharged]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Latest_Covid-19_India_Status_csv.csv' datatype='integer' name='[__tableau_internal_object_id__].[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Latest_Covid-19_India_Status_csv.csv' datatype='table' name='[__tableau_internal_object_id__].[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Latest_Covid-19_India_Status_csv.csv_6470BDCA1F074A949B98131985289F00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active Ratio]' derivation='Sum' name='[sum:Active Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Ratio]' derivation='Sum' name='[sum:Death Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discharge Ratio]' derivation='Sum' name='[sum:Discharge Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discharged]' derivation='Sum' name='[sum:Discharged:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</rows>
        <cols>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5A324862-2F0C-440E-89D5-179CF2EFD83E}' />
    </worksheet>
    <worksheet name='Heat Maps'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Discharged]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discharged]' derivation='Sum' name='[sum:Discharged:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Discharged:qk]' />
              <lod column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Deaths:qk]</rows>
        <cols>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Discharged:qk]</cols>
      </table>
      <simple-id uuid='{2B7E724A-10D6-474D-BE3E-F6A800D204B1}' />
    </worksheet>
    <worksheet name='Line Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Population:qk]</rows>
        <cols>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</cols>
      </table>
      <simple-id uuid='{E4C11EF3-6995-411E-AAC1-91FA18C637B3}' />
    </worksheet>
    <worksheet name='Pie Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Karnataka&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Maharashtra&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Punjab&quot;' />
              <groupfilter function='member' level='[none:State/UTs:nk]' member='&quot;Tamil Nadu&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' />
              <size column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]' />
              <text column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]' />
              <text column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{67770AFB-2E49-456A-B5DB-1270CCEDB0AA}' />
    </worksheet>
    <worksheet name='Scatter Plots'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='real' name='[Active Ratio]' role='measure' type='quantitative' />
            <column datatype='real' name='[Death Ratio]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active Ratio]' derivation='Sum' name='[sum:Active Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Ratio]' derivation='Sum' name='[sum:Death Ratio:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' />
              <lod column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Death Ratio:qk]</rows>
        <cols>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active Ratio:qk]</cols>
      </table>
      <simple-id uuid='{BC051122-CE43-4A5C-97BC-309645633BCF}' />
    </worksheet>
    <worksheet name='Stacked Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='real' name='[Death Ratio]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Ratio]' derivation='Sum' name='[sum:Death Ratio:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Death Ratio:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Death Ratio:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk] + [federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Death Ratio:qk])</rows>
        <cols>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</cols>
      </table>
      <simple-id uuid='{8E27A54A-924E-4F1A-912A-9D8187759CEF}' />
    </worksheet>
    <worksheet name='Total Cases [Vertical Bar]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases [Vertical Bar]&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' direction='DESC' using='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Total Cases:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Total Cases:qk]</rows>
        <cols>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</cols>
      </table>
      <simple-id uuid='{62FD793B-FB39-4E1F-B1BB-0663EC5F6766}' />
    </worksheet>
    <worksheet name='Tree Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest_Covid-19_India_Status_csv' name='federated.0yxd8eu1e1x7zh1drfiu807yf3ks' />
          </datasources>
          <datasource-dependencies datasource='federated.0yxd8eu1e1x7zh1drfiu807yf3ks'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' />
              <size column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]' />
              <text column='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8B4B9BDC-05C3-43B1-9909-317FDCEAEEB9}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Total Cases [Vertical Bar]'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B4B33ABC-CA48-4D4F-A73E-2C88E68D3703}' />
    </window>
    <window class='worksheet' name='Bar Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Clipboard_20220930T203738].[none:State/UTs:nk]</field>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]</field>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1686163-FB6A-4831-B480-588ED0D6B101}' />
    </window>
    <window class='worksheet' name='Stacked Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54058860-571D-4085-826D-56715BEE4876}' />
    </window>
    <window class='worksheet' name='Line Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B76927CC-455C-4800-A2E7-BFFBB60D3E42}' />
    </window>
    <window class='worksheet' name='Area Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E20597AE-7BB0-43C0-B5DE-B3511A5F4472}' />
    </window>
    <window class='worksheet' name='Pie Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[sum:Active:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DAB208F-D309-40DA-B997-57B2A3D3E205}' />
    </window>
    <window class='worksheet' name='Bubble Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC633EF9-E63D-4EE9-883A-538CB9FC555C}' />
    </window>
    <window class='worksheet' name='Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]</field>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FC57867-A8CC-4A6E-9649-EF0D5CF5A175}' />
    </window>
    <window class='worksheet' name='Scatter Plots'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{340C3454-6200-4AB1-B1E7-7A3FDB7230AE}' />
    </window>
    <window class='worksheet' name='Box Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[:Measure Names]</field>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{342F6047-9FEB-4E18-B2E8-E3CFB5212E12}' />
    </window>
    <window class='worksheet' name='Tree Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E206486-81DB-487F-B983-8B0C45A37C45}' />
    </window>
    <window class='worksheet' maximized='true' name='Heat Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yxd8eu1e1x7zh1drfiu807yf3ks].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BD1BFD8-2420-4C1F-90D0-B98835020393}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Area Charts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar Charts' width='192'>
      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
      O9Ow6WmIIsTcPUvEqKnKujXtqrU0IGf+npGFKFnEe9VpZXGUhCzy5+6VtYQkSqkwXWvXk4RO
      P2Z3xshlU8MWMbWZvRE70xiNUmrK1HiFTCPwUxoz9cnJNYbDIXU1mrwNoyBUgkBQVwXZSZIW
      CsPhkJoST5zBUBSCAOqqoGBMe4DhcEhNizFP7ikKBEFOUaigTivk0HUp5BH1mXthINh3Y4Yz
      85kfLduYaUpNmT7DOMp50szozbTO79cttCSjylSXRhmH7T5eMtXVbB09TVk1ps+QWKHVg3C2
      hzJU8iSnynSHXsQKnQH4XW/6/C0NkeasmVOdngYM3Jy2P71XNlXyMKOYz5QvzGn2MvwEFHHZ
      Wn8Bw+GQSmW+G86y7Llt7vN0p1vdsxttvu9jmubctvZ5ujiOyfMceyas9vTVJrNhE0IIRqMR
      5fL8kaHLllHqrq9TVXXOdp7nYdv23OevY+M8z/F9n1Jp+rvRF+WrffLJJ59wA0RRhGVZhKMO
      f/E3nyMUjUZt/BDSYMBn3zwhFQLL0Me/KRAP+flffIaSJTQa9XEBkxG/+fIRYZLiFMYFVPOI
      n//yb1DybKrLIr766hv6QUyt7IyDmlTBz//vr1BETr1+ohMZD776guNRxEq9ShzHWKbJ//nz
      P0cA9Xp98gCffPslzzoj1pbrk+/y61/9gp4Xs7a8NNHtPnnA470mG2srE90Xf/srHjc9tteX
      J7qD/R2+fbDD5ub6RPfky7/i7572ube5gnaiOzra5/63D1leWydNYizLYvf+Z3z+aJ/llVUs
      QzvRHfD00UOc+ioiS7Asi/0n9/n6wQMKtTUca9xQHB8dcvD0IYqzjCpSLMvieH+XB1//hsxZ
      n+ymd1rH7O08IjOr6EqOZVn024f85rPPyM0q9XIBgNGgw8OHj0k1C1NTsCyLwO3w608/R6g6
      9erYxonf54tvHpMJJjYW8ZA/+8vPIY9pNBoTG//9l4+I0pSibaHrOmoe8vNffoqSpzM2Dvny
      q28ZBgnViY1zfv7//gJFZFMb5xn3v/qS5ihiuVYhSRJ0EfBnv/4C8vm6dV6+N74MqpsF6hWH
      eq02uafqJpauYRkz64GazVqtQKWxPHPPxDBUitaMTjXYXK5Qqs7sEqkaqqZTLsyceFI0tteX
      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
      WWz+P2SOkKmNZbHNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Box Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bubble Charts' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdC0lEQVR4nO3deXhcd33v8ffvnDP7jHZrs2zZktfYjjdsB0ziEHAcCEmAtEnLVigQ2nt7
      ewtPWyiUtNw+vX0K97ZPC+0FClyWSxISGhYnEGJMNsdxnHiJt3iXLNuydo2k2WfO+d0/RpIt
      W7tm5mg0v9fz5HkiSxp9bZ3PnHN+5/f7/oSUUqIoBUqzuwBFsZMKgFLQVACUgqYCoBQ0FQCl
      oKkAKAVNBUApaCoASkFTAVAKmgqAUtBUAJSCpgKgFDQVAKWgqQAoBU0FQCloKgBKQVMBUAqa
      CoBS0FQAlIKmAqAUNBUApaCpACgFTQVAKWgqAEpBUwFQCpoKgFLQVACUgqYCoBQ0FQCloKkA
      KAVNBUApaCoASkEz7C6gEEgpwbQglkTGE5AywRrcl0QIcBgIpwFuJxgaQgh7Cy4gKgBZIKWE
      aAIrGEIGw8iBKMSSMNFmPJoAjxMt4EWU+hCl/nQ4VCCyRqgtkjJDSglJE6sjiGwPpg/6mRIg
      in1oNWWIiiKErq5YM00FYIaklJBIYV3swrrSk77UyQangVZbhja/HOFQJ+5MUQGYAZkysVo6
      sS53Z+/Av57TQKuvTJ8VNHVpNFMqANMgpUQGw5inLkMsYUsNIuBBXzYfEfDY8vPnChWAKZKm
      hdXUjnWpy+5SQNPQG6sRtWXqRnmaVACmQCZSmG9eRPaG7C5lBK2mFG1JrbpJngYVgEmSsQSp
      YxcgFLO7lFGJ8gD6TQtVCKZI/WtNgowlSB2dvQc/gOwewDzegszVzfgcoQIwAZlMYR67AOHZ
      e/APkT0DmCcvIi11Up8sFYBxSMvCfPMScha/819PdvZjNbejrmwnRwVgDFJKrJYuZM+A3aVM
      mdXSiezqt7uMvKACMAY5EMVq6bC7jGkzT7ci40m7y5j1VABGIS0L8/TlqzM281EyhXnuiroU
      moAKwCis1p5ZPeIzWbKjDxkM213GrKYCcJ2h+T1zhdXcoc4C41ABuI7V2gOJlN1lZIzsC6uz
      wDhUAK4hTSs9pXmOsS52qbPAGFQAriGDYYjaM7szm2QwlF6RptxABWCQlBKrrdfuMrLDklgd
      QburmJXU0qIhlky/U85RsjeEXDgvJ9OmpZSkTItEyiQcTRKKJognTZIpE0PXcBgaPreTIp8L
      h6HhNHTbpnOrAAySA1FImnaXkTWyP5L++zkz/ytPJE1auwc4fbGbc5d7aG7ro6svQl84RjI1
      9uQ8TQiKfC7KizzUVRaxuKaUFQvLqa8uwePMTTMANR16kNnSiXW+ze4yskpfXY9WUZSR14rG
      kxw938GrJy5x8EwbPf0ZaAIwyOMyWL24kvVLa3jrqjpKA+6shUEFYFDq2IU5P39GW1SFvqhy
      2t9vWZLzV3r59f5z7Dtxif5wPIPVjc7QNdYtqWb7pgY2LK3B6dAz+voqAAxes752BiLZ/4Xa
      Scwrxli1cMrflzItDp9p46cvneR4Uwd2HTA15X7ue/ty3rF+Me4MXcqpAJB++pvadyrdsW0O
      EwEPxsYlk/56y5Ica+rgR7uOcrJlFqyBHlRZ4uOBO27i9nWLcBgzOyOoAAAykSS196TdZWSf
      24Gxefmk2qm094T4wbNHePlIi23v+BNprC3lD+9ez6pF0x/dUgEAZDRO6tXTWXntlGkipcTQ
      Jx7qS5kmhp7Za9wRHDrGLSvGXTdsWZJnXz/HD399hFAePBTUNcF7blnKB7evwetyTPn71TAo
      ZHXa8+EzbyKlxOVwUlVWTjA0QCyRoLyomNbuTlJmCr/HSyyRwGEY1M2r5kLbZVYtXoLH5c5s
      MZJx+5MOROJ8a+cBXnpj9r7rX8+0JDv3nubo+Q4+88AtLKoumdL3qyfBkO7QnCWxRALTsjhx
      4RzPHdqPrutIaXGhvZUDp44TikRwOZwcOHWcvUcP0XzlEm+cPcWplubMFyMG/xtF85Ugn//m
      bl7Mo4P/Ws1tQf7qm7/hpSMtU5r3pC6BGOz6sO9UVl47nkiQskx6+vso8vrweTyYpoUlLdp7
      uqkoKWUgEiaeSFBeXIIQgu6+IFWl5bhdrswW4zQwtiy/4RLowKlW/unxfXlxyTMRIeDD22/m
      A7etRJvEvY4KAOnOD6m9JyduX57vvC6MTUuH70WklLxy/BL/8pN9xBJzawTsA7eu4CM71k4Y
      AnUPAKBp4NDn1DqA0YhrphdIKXnpSAv/8pNXSc3BXkJPvnQSU0o+9u51aONc4qp7AEDoGmIa
      Iwj5RniuXlK9fqqVrz+5f04e/EN+vucUj+w6Ou49gQrAEH+GR1xmo8G/45lL3fzT4/uIz+HJ
      f0OeeP4Eu147P2YIVAAGaUVeu0vIOuH30NMf5SuP7CVSQAtkvrXzAMebR1/nrQIwSJT47S4h
      uxwGlsfJ157cT0eBrRFOmhb/+7FX6B1l2yoVgCEuB3gzPOw4i4gSHztfPcvB01fsLsUWPQNR
      vv7kfqzrHnqqAAwSmkCbl5m58rNRiyV5bPcxu8uw1eunrvDbg00j/kwF4BpaVemYT0rzmWno
      fOfl08Tm+DDvZPzfXx0esXhHBeBaHieiNGB3FRm3t72fYy3ddpcxK4SiCR75zdWhURWAawgh
      0BZU2F1GRkVTJo+fLMzr/rHsPtDEhbY+QAXgBqLEhyjx2V1Gxjx/pY8rOVi6mE8sKXl09zGk
      lCoA1xNCoDVUz4l7gYQQ7GyZe53uMuHVNy/R0tFfWHOBTMtiIB6jKxQiGI1iSonHYVDu81Pm
      9eFxpKdDiIAHraYs3Sc0jx2IpehQ7/6jkhKe2nt67gfAkpLz3V28dO4s+y800zbQTzx142hI
      sdvNssoq3raogbc1NOBfXIXVG8rbVomi1M+z+8/bXcas9uIbF+budGgpJSfb23jk4OscunQR
      awp/zRKPh3tX38zdCxpxv5mHG2U4DdoWVPJn39o9pye7ZcKcDEAkkeDRg6/xs6NHMK3pHwC1
      RcX8t+XruKk/j/6JNIG+ZhGPH2zm0QJ/8DUZc+4muDsc5uFfPcV/vnF4Rgc/QGt/Hw8f3MMz
      oTzZdVEI9OV1iBJfwU55mKo5FYBgNMKXfrmTE22Z++UnTZNvXD7FL4KtGXvNrBACfVktorKY
      rr4I56/M0U7XGTZnApBIpfjK7l0092T+iacEftDZxH5m6SxKXUNfPh9RXYoQgpMtXeM2pVWu
      mhMBkFLyxOGDHL58KWs/IyUt/q3lBL0LSmCcvjo55zTQ19SjDR78ACfGmPuu3GgW/San73Jf
      kCcOH8z6zwlGo3z/wkn0dQ3gs38FmSj1Y2xoRLtuLcP5VnX5M1l5HwApJT8+dICEmZvlfS+e
      O0tzPIyxvgFt4TyYROuNjHPo6Etr0dcsQridIz4VS6S43JV/u9vbJe8D0B0J8+K5szn7eaZl
      8czJEwhDR2+oxti4BFFZnNXmWsM0gVZbhrFpGdr88lF7fPaFYoQLaLnjTOV9APY1N5HM0bv/
      kD3nz5IYeprsdWEuq6F3eRW9AQepbPyLOg20BRUYm5aiL5uPGKc1eE9/9IZVT8rY8n4qxMFL
      F3P+M4PRKM093TRWzOPApQu8fvECoXgMhKDM4ebtxZU0SheEojDd0RiHgSj2olUWI8oCiEm2
      Ae8ZZd2rMra8DkDKMmnqtqdv/enODtpD/bzcdPZqL00p6YxH2Jls4d5Va1lWWo8MRZEDEWQo
      BrEEMp4Cy7rahU4I0LT0u7rPhfB7EAEvwuea9EF/rT41+W1K8joA8VSK7rA9Y/OnOtoRQo7a
      SDZlWbx0/gwNm+bhKPVD6dVRGillem7RiACIjO2BZdeyR00T6JpA17ThGnRNYI5zOTbR53Mh
      rwMQTSZJTWG6g8sw2FC3gNa+PoLRKAG3C5du0BkOIYSgLzr5y4fz3V3UlRaP+fmeSIRgNMI8
      /8gllkII0LN3w2zX5LdSv5v5FQEqSnwca+rA5dCpLPHR0tFHWcBDe28Yj8ugyOuiuz+K22lQ
      VeajozdM3bwimtuCCMAwdFra+3JWd14HYDqaurupLS5mw4KFXOztIZ5KUe8sI5ZKTSkAlhz/
      QJPIKc1AzXeSdLhj8STVZX7q5gV480IXJX43S+rKmDcYjI3LaigfiGFaFu094fQbTzhOwOMC
      AUvrylQAJstjONA1bdKT3lKmSYXfz+mODiLJJN2hEPFUClNa6NrUhm+qi4rRhBjzIPc5nRS5
      PWN+/9Dkukxv/+mc4Z5Z0xUciBGKJJBIdE2j6UovkVgSIQSdwQjReJJ40mTP0Yskkia6Loa7
      0/k8TiKxJLomuNKd22cYeR0Ap2FQ4vFM+j7AlJJjV9KT2k62z2xP4Jtr5oOQnOwY/XU21NXj
      FoJkWxuJpmaSLS2krrRhBnsxB0LIePpmVRgGmt+HXlKKY34tjvp6nIsXY1TOQ0xjuySv254m
      v5aUJAY3GUxiERteRyQJhmLDX3ft/w8Z2m41ZZLzfqV5HQCHrrO4rNyWG+FllVUsLitHAmc6
      24fPBA5gdSTO0t0vcOXIUVKdnelRn0mIvj74P5qGUVGBe+1avFs24Vq+HOGY3IEdmMPd7bIh
      rwMAcHPtfF6/2JLTn1nkdrO4rByv08l9q9bSPtBP66WLxF7aQ+mJk/g7OpnRaLxlkeroILRr
      F6Fdu9ArKvDf8Q7877wDvXjsG2+AiuKxL7uUG+UkAFJKZCRCsrWVRHMzycutyEhkxOdh5PWw
      8Hhw1NXhrF+IUVuL7h+9ee22JUt57NABIoncrd29rXEpXqcTKSXJEydwvvAi1QcPYWXpTGR2
      ddH3+BMMPP1L3OvX4b/jDlwrV4x6/1BR7MXp0EkUQOvzTMhaAKSUpNrbiR44SPTgIRJNTSMO
      +qkQHg/OxYvwrF+PZ9NbMKqqhn/58/wBbl+yjF+eyM3yP6du8P41azGDQYKPPEZ4z55JX+LM
      lBUOE9nzMpG9r+Dd+jZKP/RB9JKRuyKW+N2UF3m40h3KSU35LuNrgmUySeT1A4R27yZ+8mTm
      d183DFxLGvG/8514Nm9Cc7noGBjgv/7kMcI5OAu8d9VqPu4N0PPt72L22Ns2RS8vp+zTD+Fe
      s3rE2eAfH3mZvcdyP0UkH2UsAFYiQfiFFxh4+pek2toz8ZITMqqqCNz9HnzbbuOpM6f4xssv
      ZfXnVft8fNnhRf5iJ+R4At6YdJ3i37mfovvuRQwO5T754pt8/5k3bC4sP8w4ANKyiB44QN+P
      nyB5KXsrssZjVFUR+P3f42t93expbpr4G6bBJQSfae9m0fE3s/L6M+W74x2UffxjCIeDkxe6
      +Nw3f2N3SXlhRgEwg0F6vvs9oq+9Zv8Wo0Ig1qzm3+ZXcSSW2RmRDin52MmzbGzryOjrZpp3
      69so/6NPkxIaD311Jz0DN465KyNNa/a6lJLokSO0ffFLRPfvt//gTxeFPHKUP3xuDxu6M7ck
      0G8YPHSpbdYf/ACRl/fS853vYmiCNY1VdpeTF6YcAGlZDDz1FJ1f+V+Y3bOv57w7FuMTR9/k
      wSsdeKbxJPVaK6uq+ZKlseZs/rQYDD//Av0/+zlbVy+wu5S8MKUAyFSK3h/8kOCPHoVR+mvO
      FrqUvOPkGb4cDHPnkmW4jKmN9i4oKeWzt7+Tv6ldSPHzL2apyuzp+8l/sqzvMuVF6qHYRCZ9
      DyBNk55vfJPwS3uyXVNGed++FfmRD7HnQjMHL13kfFcXfbHoiElsHoeDSn+Am6pr2NrQyOrq
      GrS+ftr/+kuYvfnZYUErKeGZW3+XncdzMyKXjxprSycXAGlZ9H7v+4Se3ZWLujLOd/vtlH3q
      EwhdJ55KEYrHCSfiJEwTr8NBwOXG53SiDQ4jSsui+1+/TmTfPpsrn5ng0lX8HUtJqAa5o/rv
      v7Nl4ifBUkr6f7Ezbw9+gPDzz6OXllDy4AO4DAOXYVDuG3sXmNiRI0RefTWHFWZHydkTrK0v
      4zWt1O5SZp2ygIetaxZMfA8QO3SIvsefyEVNWdX/818Q2TfxQS2TSYKPPT47RrZmSkre1X4M
      fYLFO4Xo/m0rcTmM8QOQ6u6m+5v/kbO5LlllWfR8+zskJ3hKHT1wkGRzc25qyoHaaC9bkqpV
      4rVqKwJs39QAjDMKJC2Lnm9/F6svd8vTss0Khej9zneQY0xjkKZJ/9O/zHFV2feeWAtepz0r
      xWajj+64GZcjffU/ZgAi+14lduhQzorKldjRY4RfHH3OUKKpmcSZMzmuKPuKu9u4v2H06eSF
      ZtOKWm65qW7441EDYMXjBH/0SM6KyrW+xx/HDN04XTj83PO5LyYXpOS26GVWLZpndyW28nuc
      fPrejSNmzo4agNCzu2blU95MMXuDhJ759Yg/k8kk0cOHbaoo+5JvHOaP716Lz6Y1w7PBp967
      gXnX7QF9QwCseJz+p57OWVF2GXh214izQOLChbkd+p4eKuP9fOqejTnp4zvb3LV5CdvW1d/w
      5zcEIPzCi3PqxncsVn8/4ReuTnOIHT9hYzW5ET/xJrevq+fercvtLiWnVtZX8Im714+6hHRE
      AKRlEfrtb3NWmN3Czz0/PCKUaMrOOoLZJH76NEIIPrpjbcFMlqsp9/OXv78Vp2P0UbARAUi2
      tJBsvpCTwmaD5OXLxM+cRVoWyZbcdpawQ/LiRaRlYegaf3r/Fm6e41Omy4o8PPwH2ygbZ1Lg
      iABEXsnvuS9TJiWRffuQsRhmb9DuarLODPYhY+lFMm6Xwec+uJU1DZU2V5Ud6YP/NmorAuN+
      3XAApJRE3yi8daSxo0exIhHkFPqC5isZjWJd05nD73HyhQ/fOmJcfC6oKffz95+8g8U1E8+B
      Gg6A1d9fUJc/Q1Jt7SSamu0uI2es0MjeRV63gz//vbfy7i1LmAuDQyvrK/iHh9454Tv/kOEA
      JM7nz6qnjDJNYseOZ/3HOJc04qibn/5ACITnxutSbZwZqplijbJe2mHoPHTPRv74fW/BNcbN
      Yj64a3Mjf/vx2ykNTH4h0PB06MS5Ag0AOQi/poElEV4vjkX1CJF+33GvX0fizBmsUBj3+nXp
      RmKHDk+7gdikjDHLVdMEOzYvYWldOf/8xL6ctiifKb/HyUP3bOS2tQun3G17OADJS5czXli+
      SHVkecH70GzalInmcoMmkKZJ4tw5Ut09mMEg2rlzyFgcRt1zJnOEwznu5xtqS/nqH23n8eeP
      s/Pl08Mdn2erzSvn88n3bqCqdHpnTwMG2xh2zv6uB9mSrZ6e1xpxljH09DZJ10wzj71xJOs1
      AGieiTf4drsMPrpjLbetred7vzrM4TNtWY7l1NWU+/nk3RtYv6x6yns7XGv4DFAIw4BjMs30
      hte52q/KrndVXUcLTO7mEGBRdQkP/8E2jp5v58fPHedEU6ftQagu83P/tpVsW1c/PKV5JoZf
      wcrmdedsp+sIh2POD4XqgQDCPfEZ4FqaJli7pJo1DVUca+rg6X1nOHCqleR0t3+dpqV1ZezY
      vITb1i7MyIE/ZPiVhnYsyRZnQwN6WRmJ5iasgRB6STHSNJEpE724mNSVK7hvvplUVydWOIwZ
      7MNZV4fZ34/V349MZm/3c6HrGOXltrV2zBWjunrSG21cT9MENzdWsaahku7+KC8cvsDLR1to
      agtmbWPu2vIAm1fWcuvaehbXlMzoUmcsV6OU5TWwydZWrHgc15KlSGkhozGkZYFlDt78gRWN
      YpSXI+bXgUjfnDrrF2KGwyROnc5qfc7GhjkfgPQI1MxG+4UQVBR7uX/bSt5/6wo6g2EOn23n
      6Pl2zlzqpiMYmXYgyos8LKwq5ubGKtY2VrGwqhhHlvc8Gw6AcDqRWWwvLhMJzO5ukoaBNTCA
      NfhIXhg6mBYylSJx9ixaURGaz4fV14deUU6i+cINPfAzThO4ViwfMTt0LnKvXJnR19M0QVWZ
      nx2b/ezY3EjKtBiIxGntGuBy1wBdfRF6+qOEY0niiRRJ00LXBC6HjtftpDTgpizgobrcz8LK
      YkoD7qwf8Ne7GgC3O6sBwLKQsRjJCyOfNl/7XiHjcczOTszO9CLuoaZU2e7DL3QD9+rVWX8T
      sJNwOnEtX5bVn2HoGqUBD6UBD6sW58cco+GLqon2nprLNL8fvaIC57KldpeSNa7ly9EK+Hc8
      Fg3S13XGvMJdL6pXlCOEwLd1q92lZI33bW/N+J7Ec8HwGcCoqbazDls5amsB8G7enJP5OLmm
      +f14Nr3F7jJmpeEAOBcvtrMOWzkXLQJA83nxveN2W2vJBt+228bcZbPQXQ3AkkY767CPEDgb
      G4Y/DLz7rik/LJrNhNtN4K4ddpcxa129BKqqQi8vs7MWW+glxTjmzx/+2CgvJ7DjThsryqzA
      ndsL+v5uIsMBEELg2bDBzlps4Vq9GnHdBhqBe96LXpb/bwZ6RQWBe++xu4xZbcSzZe+WLXbV
      YRvvLTf+nXW/n9KPfoS8bqAjBCUf+qC69p/AiAC4blqJXlo4veS14iLcq1aN+jnPls15fUPs
      u30b3i2b7S5j1hsRAKFp+G7fZlctOee79Va0MW54hRCUfvhDOOoX5riqmXMuXkzpRz48vHG2
      MrYb/oUCd25HOOd+/0jhdODf/q5xv0bzeqn47GfQy/LnrKiXl1H+p3+C5vXaXUpeuCEAWkkJ
      vjvusKOWnPJufTuOqokbQzmqqpj3l3+BVlSUg6pmRgsEqPjMZ3DU1NhdSt64IQBCCIruvWdO
      jYVfT7hcFN1376S/3rloEZWf/9ysnkujFRcz7y/+HFehPs+ZplEvEvXSUoree3eua8mZwF07
      cFRPrS2gs2ExVV/6IsbgtInZxKitoerhv8Y1hyfzZcuoARBCELj3HoxrHhDNFUZ1FUXTHBt3
      1NVR9bcP416/PsNVTZ9n40aq/ubhEQ/zlMkbd5/g+OkztH/5f6QXjc8Fuk7lX30O9+rVM3oZ
      aZqEdu8m+OiPbVtHLLxeSh74Xfzb34XQ87eZld3GDcDQHsF9jz6Wy5qypuh991H84AMZmxac
      bG8n+MP/R/TAwdxtqyoE3i2bKX7wQRwFPIM3UybcKV5aFl3/+jWik9hjdzbzbNhAxWf/7IZp
      DzMlLYv46dP0P/kzYkePZi8IQuBadRPF77sP16pVam5/hkwYAEhvm9Txd39P4uzZXNSUcc7G
      Riq/8PmszvWXUpJoaiL82+eIvLIvY822tKIiPBs3ELhzO476evVwK8MmFQAAc2CAjv/5DyTz
      rJOyY8ECKr/4BfSS3A1hWpEI8ZOniB46RPzUKZKtVyCVmtw36zqOmhpcK1bgecsGXCtWorld
      2S24gE06AJAOQec/fjVvzgTOxgYqPvtZDBuneUvLQkajJC9fJtXWTqq3d0SfI2EYaF4vemkp
      Rm0tjrr5aF4fQlfv9LkwpQBAundP97//H6KvvZ6tmjLCvW4d5X/yX9RsSGVcUw4ApIcB+578
      Kf1P/jR3ox+TpWkE3vNuSh58YNpd0JTCMa0AQPqmL378ON3f+g/Mjs5M1zUtekU5ZZ/8BO61
      a9UoiTIp0w7AECscpu/JnzLwzK/te2Cm6wTu3E7RB96PPoXux4oy4wDA4P4Cra30/fRnRPa+
      MqLvfVZpGp6NGyi+/wPpIUL1rq9MUUYCMGQoCP1PPU1k/35kODst14XLhfeWLQTuuisjDV+V
      wpXRAAyRUiIjESIHDhJ55RXip04hIzObMyM8blzLV+B96xY8GzaoSx0lI7ISgGtJKZGJBIlz
      54mfOUOyuZnk5cuYvUGsgYFRKhLpcfHychy1NTgWLcK1dAnOxkaEy6Xe7ZWMynoARiOlhFQK
      mUym26QPbX6h62g+X3q+jq6rx/5K1tkSAEWZLdRbrFLQVACUgqYCoBQ0FQCloKkAKAVNBUAp
      aCoASkFTAVAKmgqAUtBUAJSCpgKgFDQVAKWgqQAoBU0FQCloKgBKQVMBUAqaCoBS0FQAlIKm
      AqAUNBUApaCpACgFTQVAKWgqAEpBUwFQCpoKgFLQVACUgqYCoBS0/w9PgEqCQRkGDgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Charts' width='192'>
      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
      xsZotVquaXmapkmpVGJ2dtaV8eyij9nZWVe6ZZqmydbWFuPj42fq7G7Lomua5pgMExMTTrr2
      qOdrWRb7+/tMTU1RLBYPe3WdYALt7u46x1VV1ZG5tz0/mqYhCIKzqF7EcDjENE2GwyGSJDke
      pPNI8Dl+0TgWCbZMk+ct0Jymd6+HhWlarlZXuQXTNA9Fj3w+VFVFEARM03TiAG7q+dsk0c0m
      eW719IXD+3rapoD2+QiCgGEYju/d7g/g8/lc6Ydw9Dhvuh92mrN9H+2iF3teNjm3YZNcQRCO
      PZe2c0EQBGc8mzwfu9L1nUc8zKvcurGAYUIiYDLUYShrpKI+VMPL06VnfH77Qyx/gMLWDldv
      XKfR6nHj+hW874mA6NLSktM7dmNjA0mSEEWR2dlZDg4O+Pu//3tX6hLq9TobGxt89NFHrig6
      2yT4iy++GHksOHwRPHr0iF//+tenemB1Xee7774jFAqhKApffvklq6urjI+Ps76+7qSSfP75
      5yN5qkzT5O7duwSDQVRV5erVq68k/qVSiVKpxKeffsrdu3eZmJigWq0yOztLvV7nN7/5jZOS
      7vf7CQQCiKLIp59+Sjwed8YpFAp0Oh1H9Pe3v/0t9+7dO2wg/uJB660OteI+O/kKE9k4yXgI
      3fJQL6s0uwrZbJKDfI5SS6SZzxGMhllZXWdu/hLx0PvRQWY4HNLtdrl48SLhcJgLFy6wvLzs
      pEPouu7KAtB1nYmJCddiKIIgkMlknN5eo8Lj8TA2Nua8xU8D+/rA4YM6Pj5OMBgknU5Tq9WA
      w3z8UTxVdiS42+0SDodfm/6t6zrXrl3D5/MxPj6OKIqEQiFKpRJTU1POrhQMBp2It6IojpS6
      DUmSqNfrXL58me3tbUzTJB6P0263j0eCtWEfHS+tZgvD4yediOD1gGWB1O9h+SOYygA84A2E
      iQQEFFmhO5BZmL/oJL/93BgMBk5K79jYGOFwmJ2dHSYmJqjValy5csU1EnxwcMCFCxdcI8Eb
      GxtcuHDBFflGwzDY2NhgcnLyVLk7di+tbDbryAjafn+7KN0+31GExSzLYm9vj5mZGQ4ODrh8
      +fIrr9/+/r7jr9c0jfn5eXK5HAsLC1QqFeDwpWGbjNFo1NEwPZpQaJ+XnXRny89nMpnzSPA5
      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
      6nT/H7gpKHuo3tXDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Heat Maps' width='192'>
      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
      nFI1UNfD/wdizDdFxcwQTwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Line Charts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie Charts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter Plots' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stacked Charts' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2daYxkWXaQv7fEvkdmRO6ZlVVdXV3TPd094xkv2AgwGHkDbASyWWRrJAsJ
      Y34hQAghIRACCVtG/EBIRoAlLCFbMliWPSAZvM40Mx53z/RWNbXmvkRGZOwvXryVH5EZ773I
      qKyoysit4n5SSnVPveXEe/fce+69550rua7rIhBMKPJZLyDsR3CdObMBtFqtceghEFwK6mUr
      IPDQagd8+O11Vl+/TTGbRpIk6vU6mUwGgMbuU+5XXRZTIdqtA/bbYb7vC29dstbXG+msY4Bm
      s0kqlRqXPhNNZesJ7z/aRWuWePvNt/jfX/6/5BeKvHv7Br/3/lO++NYqmt4lAty9U+SjUpzq
      g/f4zj/3g0ylYpet/rXkzC6QYHyosThhW2Nh8SaNygHzC4us3nwNB4k7d14DIJcIUzdsomqM
      dDxMPhNlr1S7ZM2vL5Lb46UvIHqAi8E1m5QaMjNTictW5ZWibwAvO5jVNI14PD5mtQSCi0EF
      kCTpTK246AEE1xUxBhBMNCNNgzp2h3v31pmbK3BQazJfnMI0TfL5/HnrJxCcK6MZQKeF7rhU
      6i2yYYWNrTViiWmyWQfHcbAs67z1FAjOhdEMQImRCDuoskSp1WG+uICu60iyjCzLqKpYTxNc
      T8RC2BXAcixcvNegSiqSJF2iRuPBdcHy1S5ZAuWK/SzRdF8BfugPf4jfKf1Ov2z9NQsF5RI1
      Gg9bHVj+La/8Uyvwy995efoMQ8wCCSYaYQCCiUYYgGCiEQYgmGiEAQgmGmEAgolGGIBgohEG
      IJhohAEIJpqRDcBxHFzHwTQtXNfFcZzz1EsguBBGCoVwXYev/eFXmLuxgOGoJEISXdNm9cYK
      ruuK3EDjxiUQG3S98Qf/uFy1qjKSAdRL23RsBxuZaqmEm0ughpP9yi96g7MxWNltxw7Wm2tK
      r1p4MU29unK1LGAkA8jOLPF92SKuaxOPJZnKpnEcpx8OrSjXP3DrMpEGaruiKCjS9X+m8oCD
      LUkyV62qjBwNGo5EAJiLig/gBa8OYhZIMNEIAxBMNMIABBONMADBRCMMQDDRCAMQTDTCAAQT
      jTAAwUQjDEAw0QgDEEw0I0aDunz0/gcUF2fYP2gyPzNN1+iyuLBw3voJBOfKSAZQ299kp1RB
      SqaZScc5KO8RiedwHJEcdxwMhpPblo0rXa2oyZfBtiWC0aAOlnW1IodHMoDc7DLf96eySIrD
      XrnF8tIqlmWK5LhjYjAPqKK+GtGgg5GfkiSjqlfL6x655iYzaQBuJbPnpoxAcNGIpltwKoYD
      X971ygsx+MIrtC+KMADBqTRM+LGveuW/vgi/+j2Xp8/LUjPg9w+88mtJeDMjDEAwITxpBw35
      H7wOP/+OMIBXDtOBf/ShV76bhr9z8/L0ueoIA3jFsF34dw+98g/NCgM4jas1JyUQXDDCAAQT
      jTAAwUQjDEAw0QgDEEw0IxmAbeo8evyEdrPOgyfr6LpOu906b90EgnNntGlQScHu1Hi8YZJK
      p9hce4QSz3MjFhfRoGNgnNGgtgP+1+q6LpZlv7RuZ4novErRoM/SZSQDMLsdLAeS6QSH+yVm
      F2cxOrqIBh0T44wGHazrkiSd6f0oJ643ekTnVYoGfZYuIz2ZaCLNm29/vle4sThu3QSCS0MM
      ggUTzcT6Lv/4Q/htX5jv7/5ZmI5cmjqCS2JiDWBTg48bXtm6/l8gCl4C4QIJJhphAIKJRhiA
      YKIRBiCYaIQBCCaaiZgFapig+1Y0p8R0J44L5a5XjiiQCV2ePpfFRBjA33sf/tuGV9760cvT
      5arQsmDmN73yX5mH//m9l6fPZTGSC+Q6Nq1WG8ex6eg6tm1jiwA4wSvASD2AbXZ5+vATiOWR
      LJNkKobjyqyuLOG6Lk3TRbO9gK5cyEW9UrktJfxbr7uuM1Q26ob3v/RU4lt179yff9shOsbR
      lOu6OO7LRU32Aks9ZVyG784+7uNG0YUXOHfcuG7wfR/rMpIBOK5EJBKmbdgkI+pRXtDI0YVd
      /sWn8AsPvOO//v0un89eHQNwB3Zid10Y1M51T4YlP4sv70n8xo5X/ldvQuQMBu8OaOO67gnZ
      yNc68cOG/65ehRjfccN1GfLcRzx33PRuKwXKrjuiASiqQnZ6gVv5LM22TjIRw3EckCRkWUYa
      qGCyLJ8IP71MBl7hkc4nZaPqfJZzh19vyPN7yXDowY5IkiSUIcrJzojHyaMdN1SXM5w7bp6l
      y4gGEKZYLACQncSpAsEri1gHEEw0wgAEE81ErANMOpYDv7bllRdi8K7Y5gEQBjARdB34m1/z
      yj86B7/yXZenz1ViqAu0+eQT3vvKtzAvWhuB4IIZagCWZbC2tnFiuk8geNUYagCxaIbpYuol
      l2IEguvDiTGA65psrW9i2IPrp4IX5fdKsKN75Z9YAkU81CvFkEGwTHFxhaxhcbV2dL1+/Ntv
      w2/veeUfX4DYFVohHycdG37dN9O0moCl+OXpMypDZ4Hu37tPJplm8c5rF62P4JpSNeBvf90r
      /61l+NefvTx9RuWEAUiSwmu3FnmyWelnUrT0Ng8fP0JSk0ghlVwyRrdrsLQkssQJrjcnDKBZ
      3uHJ1j7lcrMvkxWFRHqaWFhma+cA12gSiuVwHAfHcY7Ci73xtG3bWFco0Y7rygzq14tUfDmd
      T17Pwhri27uugj90zratofmHzjs5rm3bI8iGJ64dNcHtsONs2x3p3Itg5OS40WSGYj6LoXsv
      wOzqtLU28WiOdC7HXHEKy7L6yXElKTiZpCgKVylf7kDuWRRFGSobVeeT56pDzx163JAxwHkn
      x1UUdQTZ8MS1oybHHZZ89lomxw1FE7z9ue/g7c95skgyy907vbXz6cK56vlCvFeBx75tCn5s
      AZJXyPAEV58rWV2+VoEHvor9l+eHf7D9n57Af17zyk9++PIM4HdLsNXxyj+5dP73dFz4Fd+3
      zvNR+N7p87/vRfC0DT/w+175byzDv3xrtHPvNeAv/ZFX/tJqb7vYYVxJA/iva/Afn3jl+z94
      9TMW/OID+E1fst0fXzj/e9ou/JRv5uUvzsBvvCIGYDrwuO2VD7rPPnYQY+Dc8innXkkDuEr8
      3PvwZd9c/p/8hcvTRTB+hAE8hz0dnvhak7POYXzpj+EPDrzy/R884wUFZ+LaGMB7FXjozczy
      YxfgYpwHu52gQV2dyeLLo2nC/9j2yrdTMBW+mHtfGwP4L0/hl5565YeviK8rgFIXfvqPvfLP
      rMI/vHMx9742BnAR/P0P4Ld8A9lvCH//lUcYgI+S3pt+O8YW/skrzdO2+CheMMGUu8IABBPO
      SC6Qpbd5tLZOKpWj3taYL05hGAbFYvG89RMIzpXRMsOFo6STSTTDZCoWZnt3k1hiiulzigYd
      NXpz1IjOs1zvpMwaGg06LPJzdNnLRYP2xigvE/l5taJBxx1JOur1bHvE3KB645ByQ6OYS3PY
      7LAwt0TXMM4tGnTU6M1RIzrPcr1hEZ3jl71cNOhgAunRIz+vVjTouCNJR72eoozYA8SyBd7O
      9sJAZ+dG0kEguBaIQbBgohEGIJhohAEIJhphAIKJ5tJDIf7Zx/DLa175//yZS1PlSvGT/w++
      Wu79W5Jg/UcuV59XlUs3gKoBm75PCU0RfwP04pL8z0UwnG83g59OfmkV/uoLhMpfugEIJoum
      Cb/qyyD3ehLmYy9/PdMJNhRV48XOFwYguFAqBvzMN7zyl27AP717WdqIQbBgwhEGIJhoRjIA
      13XROh0so0upfIhlWZim2D9GcP0Zbad4s8vWzj4x2cJU4miNQxw5wurKYm/DbFz8EY69nKGj
      qhDcwr53vZeXDb/vaOe6lyYLTn31ZLLvOBfHOTk91vutXhvmusfHnUU26j0uQpfzv+9oLpAk
      YXTaRGJxyrs7OLKM49hH/3UyK+xZ9oAYdu5ZZC9yj0H5xcmkAdmgZDgnHr10NtlI9xhVl3OQ
      vex9pVNkI/UAkiyzuLhANBrlM6kssWikF8MuSUcGIJ04fnBr+lGRhpz4IrJR7nvWe5y/bPCZ
      SsjykIZmMBwa6USD9CKyofcYrDiShIMUSO2SUocfd+IeZ5SNqt+JRvkU2UgGICshslmxsayg
      R8WAO//LK//kEvzCO5enz1kQ6wBXgn8CfMlXFpNzF4UwgCvB91+2AhOLaGoEE8259QAlHaq+
      pYKVOERf0R0SBdeXczOAf3MffvGhV/7gB+BdMY4WXDGECySYaIQBCCYaYQCCiUYYgGCiEesA
      gmtD1YD/vumV30pD7ow7yYxkALbR4cHaDvlkiJ2DJrMzUxhdg5WV5bPdXSB4AfZ0+Nn3vfLP
      3oK/e+ts1xwxOW6MbCqBYXYpZJJUa2UisdxR+PHw5LiXk7j2uibHHZBZgzIXa3ALeC4vOe6z
      Es1eR9nI6dFrtRqzszM0tS6rM0Vs2zo1Oe7lJK69rslxB2TqoExCHfLDLis57oskn73qspEM
      QI0muHv3DQByuVHOGM4fleHDmlf+iQvYTV0gOI0LHQT/2ib8+0de+U8XLvLu1xvXhf/w2Csv
      xuCHRabuMyNmga4JLvBzH3jlP18UBjAOxDqAYKIRBiCYaIQBCCYaYQCCiUYYgGCiEbNAgj4t
      C3766175u6d6yWtfZYQBCPqYDvz6dlD2pRuXocnFIVwgwUTzQgbQrh/y4Mk67Xaber1+XjoJ
      BBfGCxlArV5HAnY2n3JY1waiQT16UZSXI7Ms68TfeO8x7HpWL1XkuGTWoMzFtq3AMb2IznHK
      nGfI7Fda9kJjgFQqRXljj5n5GQxdf+Fo0IuQvarRoC8f5Tl6NKiiyENkvNKyFzKAdG6ad3LT
      L3KKQHClEYNgwUQjDEAw0QgDEEw0wgAEE40wAMFEIwxAMNEIAxBMNMIABBPNCxlAp1Xn8dom
      7XYvT5BAcN15oZXgSrVBQnZZ33hKLDF1JXeOXGv3djE85rOZy9NFcPV5IQOIhmV2yk3mirPo
      us7JJISXzz//BH553Suv/8jl6SK4+qjQiw7UNO25B8eSWW4le61+PB5Da7fRdZ28K/OGL0uv
      24W8S1CmwxRBmfMM2fSAzH6GrDAgszpQlIIy8xmymQGZ8QzZ7ICsq8GsfFI2NyDTNZgfkHWe
      IVsYkGkaLCgnZf7ygtw71y+bf4ZMH5DNSdDtBGWzz5AZA7KZZ8jMAVkRMPWTMmtAVqD3Lv2y
      6WfInAHZFOB0B2Rur/75ZflnyOiC5PbAcU4mRh2FVqtFMpkMyGzbRhkIv7twmetiuy647uXr
      MgbZMK6SftdVJsNxeKzyUn+yLPcubHUo19ooikIoFOrJbJ3NrR10w+rLXOukzO62eLq+Safr
      yaxui2pTD1zPNjS2tnfpmrbvOI2tnV26ltOXKYqCIrl0umZfpmtNdneD5+rtOl977yuU6lpf
      1qhV0Fp1yo1OX9Zp1vjae1+h3NT7sq7WYGdvH9N2+zKtUUUzbE9nyWVzY52drQ3ahqdfs3bI
      17/6hxxqlk9W4etf/QOqHdt3vRp7pRK2672fw/I+m9u7gedSPtjnoFINyHae3uOPvvFRQFba
      30eWlYBs8/GnfPX9TwKyvZ1N9g8qfZnZ7bC2tnbivmsPPubr37wXkNWrFXb3D0CS+7KD/V12
      9kqB4/Z3dzisNYI6b62f+B2V0i5P1rcCsvsff5NvffowILv30Qd8eC8o29vdplpv9mW61mJt
      bS2gy9imQSVZZf3hx+wc1JAkCVyHve0t6i0Nx3H7st3tTRqtDo57JANsU6fTtZFlqS9TlBCP
      732L/cNG/9ydrU2amu9cx2Zna5OWpuM4Tv/cbrvB+vY+IVXtyxzLoGv1zjuWSZJMPp8npMh9
      WafV5N6DJ8Qiob4MSaZYLKDIR8c5FhvrG3R0A9f3OyzL4JMPP6DW6vZkskomEcM0umiG5buv
      QnGmgOLTBUlhZqaIfCyzTdbW1tENE8f3cUy93qBSLlFvaUiShN5usr2zh2lZHDdmAJFkhlwq
      EZDprSpf++CjgCyWzJBLxgOyer2JcvRhhSRJRONJZMml0+kEjounMmQGztV1nZAM1UYLSZJo
      N2ts75WoHs0aHh/XbDZO6NxoNPutdP+5wIn7ptMZkolYUJbJkkx4ujTrh+yXylhHH8JIkkQi
      lQHH7rv7kiSNzwAsvUG5YdBqNnoCSaZQLGAZXWqNZl9WLBawDJ1ao9U/Vw3HCKtg+9wwvV2n
      3urQbGneuYVpHAfk44cjKxQLUzgOKLL3U8xuh3anS7/eODbVWgPHtgKVyei0AYm27m1oHAqF
      aDcOqTQ63m8zddRommQ0dHRflUJxBqtdodb2ppyisSSzMzOEQ15X67gOaixNLu45oOGwQteS
      iIaOdLZNWlqHcDxDPHwkU0Lceu0m3XaLgHfaOaSsq/2KF02kKBZybG5sBd7HYaVGYTofkKWz
      UzhWNyALhyNgd2lpel+WSiWxzIGvwxyX/NRUQNbpmkxPBWcCm40GJgrT2RQAiVSWVESiYwy4
      2LbB1m4pIEomk4F9ELRWg/1KjXA4FDiua9nks8HpvUazRTaT9n5DJk86qrBTqgSOc1yHKd/v
      GJsBqNE0t5Znyee9hy6HIphGF1nyKp0SimAYXRTfF0+W2eXRwwfslg77snAsyc2bN5mdzgVk
      tt6g3fFeYjiewurUAzIlFKZ2sEO97VViNRSmq7UxfZtApHJTRGMJZvKpviwWj/PW57+HlaL3
      gEOKwubGWsBQomEFTTeRfV9RNasVLElF9v22SCiMaflacdvkoHJIrXqIcayLEkLB5v6H36DU
      NPrHlSuHVA8PMW1P51xxnplsAj9mq0Yo6VVE13VJpLN0O+3AcV2jS6EQTMmtdzQS6Wxgs4Fa
      aZP3P30UOC4cUgNGoTXrdA0LXQ8aVCqbZ2HGu4fj2ETjKRKxSOAzz2Q6Qzrp/Q7LNAhHohiG
      16DEk2mmc1li0WjgHobWPGE8uWyGSuUwIGu0dTKJSEAWUpV+rwDjMgDXZXd7Dd2EZrPpiS0T
      rdPBv/GIY5l0Ohqm4z0MNRLn5soy2fRRRXQddre30I1gK9Tt9Cpwp+s9pK7WwrJtOrpv8l+S
      mS4UCKlHLbGsEI+o7Oxscdg4qhRmmydr27SbVbYPvA/8w+Ewj+59SLXlGU9b62B3WzR99zAt
      m05HC0weyKqCa1v4P+dt6x2efPpNSo2jFlYJIbsuTrdJo+u9iJAS5jPvfoFCKtI/zrVdJLNB
      w/AuWNnb5OnOQeC5SLjU6t5zx7E42N9DN4Otbrut0ahWaPgahkppm/uPN/vuA0BudoXP3w3u
      PVTZ3+Cb97z87PFUBlOr8WhtM3BcdX+Tb3x0r192HRvbcZAsnXLN6/Vr9SZTOa+RMbo6e9sb
      HDaDRrv++D5PNncDslqtRntg1lJVVUzTDMhs26TZ1gOy9adPeLy24Z3HOJAkZmYXaOi7hMNH
      Xb3rUq03uLGyQiJ2ZMGuQ7XeZGXlBgmfVVvdDg2tS0LvAKme+zS7gFJr+HcOAgli0Ribm5ss
      z071ZdFojM2tTZZmj3ofSe75hDGf9SthXn/jLoszR8eocaJhGVXJMDvtdZ31Wg2906bRMZhK
      9ypFJjfF7bvveMc5No1Wh+WVG8QjXvcsKyrhMEi+LiCVSDG7eINs3NNFjUR5++136PiOSyTC
      lPdr5KePKrtjYbkus4u3yEQ9l6q49Dpq3msYup02djjDrQVPD8MwMCyb4pGf3FPZJJubIp6G
      9JG8026SLixztzAw42RbmJLPHdVaJHKzLMQc3yEGhbllcgycK4FheoatqGGajSaF+WUKuV4D
      127UsJE5PKxSmOr18NFYghuvvYHp62V0rcXM/DIdJ1hNFxaXOWy0aXYMUrFefWu1NaIRz81s
      N+vkC3OEIrHAuaurq3Rc712MMRaot+9Uv0WUJHLZDKZhoHWOrFCSyWXTmKaBpnuWKUkSIVVB
      OvbjbYMHDx6xt7dDqeK1zqFwlFgswlTO6+4j0TjxWJT8scx1aDRbWJbP3zc1dg815nJxNvYP
      +/otrayyevMmsbD3gMOxODdu3sbVvdZKlmU67abXcsgKmWQcyzTpdI9emGNRrzfp6jqO41Xi
      x48fE0llCateZe9qTb79dIdkzLtvvdGiUVqj1DpqxWSVTDKGJDmBlrzVatFsea19JJZAlXuD
      z/5zikS5cWOZ2qHnEshKiFazjqp6FTaWSOF0amzslfHT6ujUaz53NBonHlGRfB/SG4ZB+bBK
      y9fjA0STOW6vzAdkxeI01Zr3HiPRCJbZm6E7Rms32Xz6kAPf2EtRFGzHJeKr2ACWKxFRbOqt
      3m92XRdZkujqGlq39/wSqQy4Tn8ADT2j2N6veJ4G4zQA10WWg5dzbZMHjx6j+fxExzZ5+PAR
      HZ8sFEuRSyeIHA92JJlsPksuN0Uq4fUeBwcHtDWNaZ8fq7XqbG3t+CxdIhENsV/ap3HsxigR
      8skwVc1i1ufvDyMWjWHpLUIx77hWvYLhKiwvLvRlpmXy+OF99OMWS1aJRsMc7q1Rqh8bvMKN
      m6vItnm0SduROkqIbvOASvuostsGajRBNJEj4zMKRVHZ29nF/1hTmQzZtNdjAej1PT59utcv
      y7KCY3YIx4LrM46ps7a5E/y96Sz5dHBMkYwnSCZ9lUSWabdbtH0D5Vg8SXEqRyzmtbDto3GB
      OTCAVpSge6KGY0imxuae58dHojFm55fIJDzPoFatEImnAmMFgGgkTGHxNRYLvedgWSaOCzNz
      C4EeeXvjCaVDz/Ci8STLi3OBxmJsBmA6MqlkPGhd4TjvvvM2CzNeJgk1HOfdd99hvngkc2w+
      +ehDHqzvMp09erGyyo0bN7l16xaF3PHLlkjGIoRCYeo+P1GNJFi5sUIxf+RPShKhSAQZPIOS
      FWZmZ5mdnSMeff7GsrIaJh7zjounsnSbh3R8Y5JYIsVnP/cFilnPd87np4jE0mQTx26gzUGl
      SkfvovhG/elMmsVbb1JMHh0nyVT3NmhZIWIh75VIssrszDTOkfF0dY1vP3xCqbQf0Le4fIfv
      eft2QNYo7/Lxw7WATNcalGtBH7tSqfXdkGO6Rrc/benpEibkaOwcVAEo7WzS0g00XwubSGWQ
      JahWvZmXyv4Oh402d964E7heoTgT6Mk3Nzap1mscVr2eJ5FMo/pnS45oNptYlvcuXCRURTqx
      k+bdz3yW2zdX+mWtWafZ0lBD3rsd2yC42WzSbtQCAyxsi3Klit+Rd49lxyJZ4a13Ps8X336d
      tn8gO4gkkcxNk06lmCt4L8yxTDKZLG3Nu68sqySTieD4YRSsDqWDClpHp+ur7O1WG1yr370C
      OEaHSl1D8o14m80WEibtrtcrTKfjyKHgTITR0bD8I2VJYfWNt/nOd+8SOn7hjoXpOCRjYZqd
      3n0j0Ti3lueR1KARHx6UsAZ+bKqwzHd91jOKWnmfxNQSb9329nbutBqYpsGTJ0/7Ew6OZZDO
      ZJmbnQ1eL51mulAgfLSTpKqqyJJ8YnU1m06C5PVibb1LSLLZG5iObLaaAS9gfm6GfGGO1SWv
      l1VDYXBtjIHBbaVcYu/Ac9se3P8EG+VE8qtyuYw/YC2VzbO/s8napjdwH1NyXJdyaQ8iPVcG
      AMfi3qM1YvGk58Y4FvcfrxONJUnFva5OlmXy0zPPvYtWK1NuaGSnPZ+4Xi3TsqNMFz23SHId
      9K5FWH1+OEEAOYSmacSjUWLHXaljY+hNnGiOfPKouzfbPNoqk0qnveNsk2ZHJ5kpkI173bCr
      hKiXtmjOLfbHGr2sZJKX/Eoasg2qpJDL5SCXY9pXySqlLbb3bb5wVN7dXMOyTNLp4By95DhY
      ftcpm6fZ2qBS77BytDtnLJkmHI5i2Rqb2zvcXl3msLzP4/UdslNBA9jbeMRmO8SPfv9NAPLF
      OXKueyLrmKKo2LbXyyyvrJ54zKahM1WcJ9nROKi1KGSTRBMpokFPh3AkimkYhOO+wbzjcPv2
      6xh4jcDC4krvWflYe/wAw5HI54PyG6u3iKZ8U/UntHspJO68+Tav31ol2l+0kMik04Rk1zdH
      L5FOZwZkoxOKxqkdbFNt+LpxScZ1HVRfJWk1apRKe5QOm0Oucgqyyu07d7h5+3VySZ+BKirh
      kC9bmySTyWaQHNObqpUk4hEVlHAgw5okqczOzqD6ZnySmRztagl9yMbUvhNRVRXVt5oNkJ5e
      5PNvelOUkXiCdCZDsz4wB17Z4hsfPeyX64cHHNRaFAcWx/LZJNniErdWFgGIJzMszM0R8u0Z
      3O20yRQXWZkNJkWTJCnQ73TaTfYODgmHTm9XQ+Eoaw8/4f5mmelM4tRje6vDni661mJ9c4t6
      w3u3g5W/9ztSZFIJagM5bF3XxfV1C2NLj17eWaOiySRTCZbnZ0BWWFyY4979B7Q7XRKxSK+S
      xCJY9vP98GFIssr8/ILPyCCTyfDhe3+CGkuSTcbAsdFNi+LcIsV8+pSrPeMeg3kKZYXiwirF
      gCxMPKLihv2PT0JSIqRiwSBxrXkI0TSJiHdso9FClUzaXZtMLLjKeRq61mRnr0RhxptlyU8V
      ONzT2a80YNHrRXOzK9wKeTNZ+eI8+WJwdgagWS2z1Q5xa3nu6Pf3XI+wz09WVBXbsonGoifO
      9xNLpChO59Ct0wPlbbNLYeEm05Jy8nkPkE4FV4fjyTSK5KAb5ilnQXFmjmq1erJnePqYULrF
      bKHXY46nB5AkCnOLxMMSsajXXVndNg2tt/B1dCDZTJqD/b2X6gFMvYXpqj1jOiISS7K0tEg+
      nezrElIkDJuhA6ixIMlkknH2d3fQj+e8JRm726ZZK3uzQFaX3XKNRrXqWwk20PQu8UyRbOzF
      2p9oPEWxmGNjfSMgb7Yb1JteZde1Fk/Wtpiayg9eIkBlf4umHeH2srffaiyRZm5ulhlfT9Go
      HhKKJcikksMuE0CWJLZ39k495unaOiEMCJ/e+gNsbz7l3qOn/fK373/K9MyiN1uFGDMAAAbf
      SURBVIlyCvVq+cTY47XX71D0RReMrQewui2qLZPCrG+RQQlx89ZrFI+nHiUJx+ygmQ6djg68
      QAvt2lSbXRIRGes4NMB12Fp/gqPGA65XtrDAuwW8dYVxI0lobQ1ck7ZukU30erdUOkPHUSim
      j1dzw3zmzbfQq7uUm12WplSQZGIRhbYZQpFf3EBj4Sgrq0G/OpObYTWsY9kOqiITjsa5uTTL
      VrnK4tyzx1b5whyaplMqH7IwV3z2ccU5TjelHrZlUCofsry8dOpxc3OzNJptkuHT38/e/j5v
      vfMdtH0r5slUhmKxeCIh8zA21p4gJZrMFnutvaG32d47oDjjGfzYDEBRIuxuPCCdzXBrqffQ
      JUlm/dHHSLfv+twRiWxuiun8C36r6Fi0DZeb81m2qg3SiSggMbuwhFv2rRhLEp16iSd7TV67
      eWOkac+XQZJcssUlplKewRt6B9txvVAISSISiRCeWfFMXVaZXVgZvNxIdDtt9ne2KZshFud8
      MT2uSyQSoVarMT2V7y3c6Rpt7XQ3oVop4ShR5mdjpx43Kk+fPCWfjhFOnW4uiWSaRPL5jV+1
      UkKLJgj5RscLCwunnBHk5mt3GHwExyn0jxmbATiOSa4wj3K8hO667G2vI0XTxI5X8lyHSrWO
      dBQf8kIoYeamkuxXO6zMz/Wvt7+3S9cJBwKtIvE0jr5Dp2uejwE4FvVGC1sOBaJLlXCEg4cP
      SU/NEPP5/M/zc0clHIlRKEzTLncC8t29PXKFOaaPXJ7D0jaHLZuby6dvJZ8vjNayj8r8/Bz1
      Zhtbb0Ly7Fd+4+5bL/3sDF1je69Ewdfad7sGS4uLgWnksfkIoXie7/7i51hZ8KbP5HCMbCLi
      zfdKMvlMEst2OKi8aFYJiUy+wNLivOc6uBZSNM+dlRmqdZ8P3GljOQ5a95R1hbMgqyTjkV6A
      V9O3qiirzMzOElLOx/WSZBm9qwVWZBuHJerNNls+vztXmKOYS1A6qAy7zLkRT6aZm5s7MdP0
      spy14Rhs7V23t6FLtVrty8b2pox2mW9+/BDteDFLkpieyuM4DrovxDUUS9HVGqSSzx8APRc5
      TAidjd1yILIQ1yUaibKxsfHsc89IOpunWmuQjvnj/FUc2/e9wjmwdPMuy7PeCmoqN00mnUKR
      vZ6oVilhSxEWTvH/X3W63S5Li4sBWTKdZWFhgTd9q9Jjc4HUcBKj9W1qzUJ/lsZ1bBxUprKe
      v2d125iOTEd/wUHwMCSJhaUbJ8TRWIJkMkEkNfoU44vSarVQFZd292gQfKySa6EZlhcOMUa6
      uka11iAW92ZjJEmmkE3y9MALD85Nz3JyZnyycGwL0zSRJG99SJYVBudFxjcLpDc4bFnkWk0o
      9h6/okZQsAZiNCQy2TzTufNL2NPRmnz66ae8/s53nds9cGyS+Tnyvsqv6zqhRJbcOVR+6IVC
      zM7GT8i1TpvOS0wrv8pk8gUy+cJzjxubCySHotxYXmDmOCTBdXi8tkG5ctD/vhR68eEydmDw
      OFZch47hsLy87IVlnAOOZeFKwT3Euu0WFvLYBr2jUC3tcNAwublycpFL8HzGZgCubdI1e/PQ
      PSSWlxbJZbOBr6YkRUV2T34POj4kVEUmFI6c22AUIJXLozgGtu/LtngyBY6F65yTcQ8hW5hl
      Np9kv3SxA95XhbH2ALGw7E1vShLReIq7d+8ezdn3sPQWLUNiaX72GVc6I65FtdEmk8l4n0SO
      G8diZ3uLg3Lwe11d7wDSi0ehnoF65QBLjpy6kCV4NuNbBzA63H/wCEcOkX7t2Qs9aiRBVK0c
      7Ul7Dr6ypBCLqOgdnXDc9KI1x3yP1cUiZkwi48v24FgmrhS+UBcoOz3D1cvQen0Y2/cAda3L
      6uJcIDXFCRybx0/WOKweoipjs70gkkwuk8KyjOcGTL00rkOpaZFWDbq+71+j8Rj3v/Un1Npi
      QHpdGFstTMXCSKEozVYr8MFKAElmeXkR2+3lZzkvHNsGNUoudXLGZCzICjMzJ104w4LlxVle
      Msuk4BIYW1YINRwnEmkxP3OKL+obF5wnoXAE12l7H6dfBI5F17LJZKdIRM+pdxOMnbG9Kdcx
      0bvGubbso9LVNR7c+xjCCW4vXdDgUFZZWFjEMTQa5lVMHC8YxngMwHWpNjo4Zuf5x14AifQU
      X/ziF0lmLn54KIfjZM9nHUxwDoxtGtTLCXSBc4DPwHEs9vb2AlkcBIJhjG0MMDu/yMzc6LHa
      54mutbEsqxeFmj6ngbDglWCso7WLnP8+DcmxkMLJcw2FELwavHrbpLoO9bZONhE+v3UAwSvD
      q2cAR/lHbdsKJLcSCIbx6hkAABK7u7uBzyQFgmH8f/qVpEJfTt43AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Cases [Vertical Bar]' width='192'>
      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
      /j/Fs3pSTjCHBQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tree Plot' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFS0lEQVR4nO3YzW4bZQCF4ePf2LUTO06TJiVqGxUWlBWLijVsuRS23A13gViABEJIRYWC
      SlVasShNq9DaTZzE/2PP2JNhg5ogpRKRHJv0vM/KiR3pbN58nyeVJEkiwFR63gOAeSIAWMue
      /OH3r+6p86o1ry244HbWL+txozPvGWfyrwA6jZYOnu/OawsuuJ0kq0fPmvOecSZcgWAte9ov
      Kxs1pdIpHU1iBe2BcoWcFhaLSuJE4WCoTC6rwUFv1ltxQXx06x1t11t6//qqdnY7GsexKpcW
      9HK/p1IhryCMVMjnFE1iVUsLymTSGkUTrdfKelpvKZNOaam0oO16S+f9jPLUAIrVkoadgWrX
      1nRpOVCnfqjyypIkKX2QVnm1QgB4o73WQO9trmi/E+jKckmFfFY7ex1du1LRWrWkxmFfw3Cs
      q5cXlc2k1R9GmsRHarYDLZcL6gahblypqt0b6aA7PNetpwbQ/LOuVCatJEk06gaKBqG6e22F
      /4wZj6JzHYWLrb7fU7MdKD460mq1pE5/pGE0UamQ02F3qP1OoIVcVsForFIxr/p+T0mSqFzM
      6yhJ1B2EetZoqTMIz33rqQHE41gax+o2jp8InXwdDkbnPgwXVziOFY5jSdLO7vFToWgcq9Ub
      vf5MNwil1uDE3x3/t99utGeylS/BsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsJad9wC8PT67vaXPb2/Ne8aZEACmJglCJdFk3jPOhCsQpm4wGqrT7ylJ
      kv/02XniBMDU/fT4gWqLFSWSKuVFHXbaCseR1pZX1GwdahiFWqlUNZlMlM/lVFuq6MXerm5t
      3VSltDjTrZwAmLq16ooGo5F+ePCL7j76TZtr66otVbXfbunre3cUx7H6QaAvf/xef+290svm
      nr799a6evtiZ+dZUcuKcuvPFNzp4vjvzEXg7fPzpbRX5DgBcHAQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAa9l5D8DbI3UpUro4mveMMyEATE06eKhM
      +GTeM86EKxCsEQCm7uH2rkbRRPefNNTu/7+vRFyBMHWdfqif/3ipYThRJp3Wd/efaWOlrPHk
      SNE41kI+oxfNrsrFvCTpkw+3Xr+eNU4ATN3m6pLio0TX1ysaRROlUymllJIkvbtZUyGf1Wq1
      pJtXl/XBjVUlSTK3rZwAmLqtjaq2Nqpvfn/9ze/NGicArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArP0N3Ipb26PjGeAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
